services:
  jasmin-web:
    build:
      context: .
      dockerfile: config/docker/slim/Dockerfile
    image: myapp:latest
    container_name: myapp
    env_file:
      - .env
    ports:
      - "${JASMIN_WEB_PORT}:8000"
    deploy:
      replicas: 1
      update_config:
        order: start-first
    environment:
      DEBUG: "${DEBUG}"
      DJANGO_SETTINGS_MODULE: "${DJANGO_SETTINGS_MODULE}"
      ALLOWED_HOSTS: "${ALLOWED_HOSTS}"
      PRODB_URL: "${PRODB_URL}"
      REDIS_URI: "${REDIS_URI}"
      TELNET_HOST: "${TELNET_HOST}"
      SUBMIT_LOG: "${SUBMIT_LOG}"
    volumes:
      - .:/app
      - /app/env
      - static_volume:/app/public/static
      - media_volume:/app/public/media
      - logs_volume:/app/logs
    depends_on: [redis]
    restart: unless-stopped

  jasmin-postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    restart: unless-stopped
    healthcheck:
      test: redis-cli ping | grep PONG
    deploy:
      resources:
        limits:
          cpus: "${REDIS_CPU}"
          memory: ${REDIS_MEM}
    security_opt:
      - no-new-privileges:true

  rabbit-mq:
    image: rabbitmq:3.10-management-alpine
    restart: unless-stopped
    healthcheck:
      test: rabbitmq-diagnostics -q ping
    deploy:
      resources:
        limits:
          cpus: "${RABBITMQ_CPU}"
          memory: ${RABBITMQ_MEM}
    security_opt:
      - no-new-privileges:true

  jasmin:
    image: jookies/jasmin:latest
    restart: unless-stopped
    ports:
      - "${JASMIN_SMS_PORT}:2775"
      - "${JASMIN_DASHBOARD_PORT}:8990"
      - "${JASMIN_HTTP_API_PORT}:1401"
    depends_on:
      redis:
        condition: service_healthy
      rabbit-mq:
        condition: service_healthy
    environment:
      REDIS_CLIENT_HOST: redis
      AMQP_BROKER_HOST: rabbit-mq
    deploy:
      resources:
        limits:
          cpus: "${JASMIN_CPU}"
          memory: ${JASMIN_MEM}
    security_opt:
      - no-new-privileges:true

volumes:
  static_volume:
  media_volume:
  logs_volume:
  pg_data:
