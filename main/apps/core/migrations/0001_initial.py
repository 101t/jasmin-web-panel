# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-01-28 11:43
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FiltersModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('TransparentFilter', 'TransparentFilter'), ('ConnectorFilter', 'ConnectorFilter'), ('UserFilter', 'UserFilter'), ('GroupFilter', 'GroupFilter'), ('SourceAddrFilter', 'SourceAddrFilter'), ('DestinationAddrFilter', 'DestinationAddrFilter'), ('ShortMessageFilter', 'ShortMessageFilter'), ('DateIntervalFilter', 'DateIntervalFilter'), ('TimeIntervalFilter', 'TimeIntervalFilter'), ('TagFilter', 'TagFilter'), ('EvalPyFilter', 'EvalPyFilter')], max_length=24, verbose_name='Type')),
                ('fid', models.CharField(max_length=24, unique=True, verbose_name='Filter ID')),
                ('parameters', models.TextField(verbose_name='Parameters')),
            ],
            options={
                'db_table': 'tbl_filters',
                'verbose_name': 'Filters',
                'verbose_name_plural': 'Filters',
            },
        ),
        migrations.CreateModel(
            name='GroupsModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('gid', models.CharField(max_length=24, unique=True, verbose_name='Group ID')),
                ('status', models.BooleanField(default=True, verbose_name='Status')),
            ],
            options={
                'db_table': 'tbl_groups',
                'verbose_name': 'Groups',
                'verbose_name_plural': 'Groups',
            },
        ),
        migrations.CreateModel(
            name='HTTPccmModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('cid', models.CharField(help_text='Connector identifier', max_length=24, unique=True, verbose_name='Connector ID')),
                ('url', models.CharField(help_text='URL to be called with message parameters', max_length=128, verbose_name='URL')),
                ('method', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST')], max_length=16, verbose_name='Method')),
            ],
            options={
                'db_table': 'tbl_httpccm',
                'verbose_name': 'HTTP Client Connector',
                'verbose_name_plural': 'HTTP Client Connector',
            },
        ),
        migrations.CreateModel(
            name='MORoutersModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('DefaultRoute', 'DefaultRoute'), ('StaticMORoute', 'StaticMORoute'), ('RandomRoundrobinMORoute', 'RandomRoundrobinMORoute')], max_length=24, verbose_name='Type')),
                ('order', models.CharField(help_text='Router order, also used to identify router', max_length=24, verbose_name='Order')),
                ('filters', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.FiltersModel', verbose_name='Filters')),
                ('httpconnectors', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.HTTPccmModel', verbose_name='SMPP Connectors')),
            ],
            options={
                'db_table': 'tbl_morouters',
                'verbose_name': 'MO Router',
                'verbose_name_plural': 'MO Router',
            },
        ),
        migrations.CreateModel(
            name='MTRoutersModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('DefaultRoute', 'DefaultRoute'), ('StaticMTRoute', 'StaticMTRoute'), ('RandomRoundrobinMTRoute', 'RandomRoundrobinMTRoute')], max_length=24, verbose_name='Type')),
                ('order', models.CharField(help_text='Router order, also used to identify router', max_length=24, verbose_name='Order')),
                ('rate', models.FloatField(default=0.1, verbose_name='Rate')),
                ('filters', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.FiltersModel', verbose_name='Filters')),
                ('httpconnectors', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.HTTPccmModel', verbose_name='SMPP Connectors')),
            ],
            options={
                'db_table': 'tbl_mtrouters',
                'verbose_name': 'MT Router',
                'verbose_name_plural': 'MT Router',
            },
        ),
        migrations.CreateModel(
            name='SMPPccmModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('cid', models.CharField(help_text='Connector identifier', max_length=24, unique=True, verbose_name='Connector ID')),
                ('parameters', models.TextField(verbose_name='Parameters')),
                ('action', models.BooleanField(default=True, help_text='Start/Stop SMPP Connector', verbose_name='Action')),
            ],
            options={
                'db_table': 'tbl_smppccm',
                'verbose_name': 'SMPP Client Connector',
                'verbose_name_plural': 'SMPP Client Connector',
            },
        ),
        migrations.CreateModel(
            name='UsersModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('uid', models.CharField(max_length=24, unique=True, verbose_name='User ID')),
                ('username', models.CharField(max_length=24, verbose_name='Username')),
                ('password', models.CharField(max_length=24, verbose_name='Password')),
                ('parameters', models.TextField(verbose_name='Parameters')),
                ('gid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.GroupsModel', verbose_name='Group ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Related User')),
            ],
            options={
                'db_table': 'tbl_users',
                'verbose_name': 'Users',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.AddField(
            model_name='mtroutersmodel',
            name='smppconnectors',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.SMPPccmModel', verbose_name='SMPP Connectors'),
        ),
        migrations.AddField(
            model_name='moroutersmodel',
            name='smppconnectors',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.SMPPccmModel', verbose_name='SMPP Connectors'),
        ),
    ]
